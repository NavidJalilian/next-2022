import Head from "../node_modules/next/head";
import { useState } from "react";
import Expense from "../components/Expense";
import MonthBar from "../components/MonthBar";
import NewExpense from "../components/NewExpense";
import React from "react";
import { ExpensesType } from "../types/types";
export default function Index() {
  const [expenses, setExpenses] = useState<ExpensesType[]>([]);
  const [currentYear, setCurrentYear] = useState("2020");

  //
  function addToCollection(expense: {
    title: string;
    date: string;
    amount: number;
    animate: string;
  }) {
    setExpenses((state) => [...state, expense]);
    setCurrentYear(expense.date.split("-")[0]);
  }
  const months = [
    "01",
    "02",
    "03",
    "04",
    "05",
    "06",
    "07",
    "08",
    "09",
    "10",
    "11",
    "12",
  ];
  const eachYearMonthlyExpenses = expenses.reduce(
    (acc, curr) => {
      const year = curr.date.split("-")[0];
      const month = curr.date.split("-")[1];
      if (!acc[year]) {
        acc[year] = {
          "01": 0,
          "02": 0,
          "03": 0,
          "04": 0,
          "05": 0,
          "06": 0,
          "07": 0,
          "08": 0,
          "09": 0,
          "10": 0,
          "11": 0,
          "12": 0,
        };

        months.forEach((month) => {
          acc[year][month] = 0;
        });
      }
      acc[year][month] += +curr.amount;
      return acc;
    },
    {
      [currentYear]: {
        "01": 0,
        "02": 0,
        "03": 0,
        "04": 0,
        "05": 0,
        "06": 0,
        "07": 0,
        "08": 0,
        "09": 0,
        "10": 0,
        "11": 0,
        "12": 0,
      },
    }
  );
  const totalInYear = Object.values(
    eachYearMonthlyExpenses[currentYear]
  ).reduce((acc, curr) => +acc + +curr, 0);
  const filterdExpenses = expenses.filter(
    (expense) => expense.date.split("-")[0] === currentYear
  );
  return (
    <div className="">
      <Head>
        <title>expense</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-gray-800 h-full pb-52">
        <main className="md:mx-auto max-w-2xl pt-4 ">
          <NewExpense
            addToCollection={addToCollection}
            
          />
          <div className="filter p-4 max-w-2xl bg-gray-700 text-white capitalize font-semibold rounded">
            filter by year
            <select
              value={currentYear}
              className="ml-10 text-purple-900 rounded-sm px-4 py-2"
              onChange={(e) => setCurrentYear(e.target.value)}
            >
              <option value="2022">2022</option>
              <option value="2021">2021</option>
              <option value="2020">2020</option>
              <option value="2019">2019</option>
            </select>
          </div>
          <div className="flex justify-around bg-gray-800 p-2">
            {months.map((month) => {
              
              return (
                <MonthBar
                  key={month}
                  amount={eachYearMonthlyExpenses[currentYear][month]}
                  month={month}
                  totalInYear={totalInYear}
                />
              );
            })}
          </div>
          <div className=" overflow-hidden">
            {filterdExpenses.map((expense) => (
              <Expense key={expense.title} {...expense} />
            ))}
          </div>
        </main>
      </div>
    </div>
  );
}
